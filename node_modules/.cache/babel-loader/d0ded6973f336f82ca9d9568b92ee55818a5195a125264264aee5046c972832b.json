{"ast":null,"code":"var _jsxFileName = \"D:\\\\ITIncubator\\\\homework-front-main\\\\src\\\\index.tsx\",\n  _s = $RefreshSig$();\n// import React from 'react';\n// import ReactDOM from 'react-dom/client';\n// import './index.css';\n// import App from './App';\n// import reportWebVitals from './reportWebVitals';\n\n// const root = ReactDOM.createRoot(document.getElementById('root') as HTMLElement);\n// root.render(<App />);\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Notes() {\n  _s();\n  const [newNote, setNewNote] = useState(\"\");\n  const [notes, setNotes] = useState([]);\n  const onChangeHandler = e => setNewNote(e.currentTarget.value);\n  const addNote = () => {\n    setNotes([newNote, ...notes]);\n    setNewNote(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: newNote,\n      onChange: onChangeHandler\n      // xxx = {addNote}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Notes:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: notes.map((n, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: n\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 38\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n_s(Notes, \"x4hmcF7njcftPWx7zEGztLUsSHg=\");\n_c = Notes;\nReactDOM.render( /*#__PURE__*/_jsxDEV(Notes, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 43,\n  columnNumber: 5\n}, this), document.getElementById('root'));\n// Что надо написать вместо ххх,\n// чтобы при потере инпутом фокуса добавлялась заметка? \nvar _c;\n$RefreshReg$(_c, \"Notes\");","map":{"version":3,"names":["React","useState","ReactDOM","jsxDEV","_jsxDEV","Notes","_s","newNote","setNewNote","notes","setNotes","onChangeHandler","e","currentTarget","value","addNote","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","map","n","i","_c","render","document","getElementById","$RefreshReg$"],"sources":["D:/ITIncubator/homework-front-main/src/index.tsx"],"sourcesContent":["// import React from 'react';\n// import ReactDOM from 'react-dom/client';\n// import './index.css';\n// import App from './App';\n// import reportWebVitals from './reportWebVitals';\n\n// const root = ReactDOM.createRoot(document.getElementById('root') as HTMLElement);\n// root.render(<App />);\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n\n\nimport React, { useState, MouseEvent, ChangeEvent } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nfunction Notes() {\n    const [newNote, setNewNote] = useState<string>(\"\")\n    const [notes, setNotes] = useState<Array<string>>([])\n    const onChangeHandler = (e: ChangeEvent<HTMLTextAreaElement>) =>\n        setNewNote(e.currentTarget.value)\n    const addNote = () => {\n        setNotes([newNote, ...notes])\n        setNewNote(\"\")\n    }\n    return (\n        <div>\n            <textarea\n                value={newNote}\n                onChange={onChangeHandler}\n            // xxx = {addNote}\n            />\n            <h4>Notes:</h4>\n            <div>\n                {notes.map((n, i) => <p key={i}>{n}</p>)}\n            </div>\n        </div>\n    )\n}\nReactDOM.render(\n    <Notes />, document.getElementById('root')\n);\n// Что надо написать вместо ххх,\n// чтобы при потере инпутом фокуса добавлялась заметка? "],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,QAAiC,OAAO;AAChE,OAAOC,QAAQ,MAAM,WAAW;AAChC,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACrB,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAS,EAAE,CAAC;EAClD,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAgB,EAAE,CAAC;EACrD,MAAMU,eAAe,GAAIC,CAAmC,IACxDJ,UAAU,CAACI,CAAC,CAACC,aAAa,CAACC,KAAK,CAAC;EACrC,MAAMC,OAAO,GAAGA,CAAA,KAAM;IAClBL,QAAQ,CAAC,CAACH,OAAO,EAAE,GAAGE,KAAK,CAAC,CAAC;IAC7BD,UAAU,CAAC,EAAE,CAAC;EAClB,CAAC;EACD,oBACIJ,OAAA;IAAAY,QAAA,gBACIZ,OAAA;MACIU,KAAK,EAAEP,OAAQ;MACfU,QAAQ,EAAEN;MACd;IAAA;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACFjB,OAAA;MAAAY,QAAA,EAAI;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACfjB,OAAA;MAAAY,QAAA,EACKP,KAAK,CAACa,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,kBAAKpB,OAAA;QAAAY,QAAA,EAAYO;MAAC,GAALC,CAAC;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACf,EAAA,CAtBQD,KAAK;AAAAoB,EAAA,GAALpB,KAAK;AAuBdH,QAAQ,CAACwB,MAAM,eACXtB,OAAA,CAACC,KAAK;EAAAa,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAE,CAAC,EAAEM,QAAQ,CAACC,cAAc,CAAC,MAAM,CAC7C,CAAC;AACD;AACA;AAAA,IAAAH,EAAA;AAAAI,YAAA,CAAAJ,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
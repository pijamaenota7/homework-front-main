{"ast":null,"code":"var _jsxFileName = \"D:\\\\ITIncubator\\\\homework-front-main\\\\src\\\\index.tsx\",\n  _s = $RefreshSig$();\n// import React from 'react';\n// import ReactDOM from 'react-dom/client';\n// import './index.css';\n// import App from './App';\n// import reportWebVitals from './reportWebVitals';\n\n// const root = ReactDOM.createRoot(document.getElementById('root') as HTMLElement);\n// root.render(<App />);\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction User() {\n  _s();\n  const [userName, setUserName] = useState(\"\");\n  const [text, setText] = useState(\"\");\n  const onChangeHandler = e => setUserName(e.currentTarget.value);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: userName,\n      onChange: onChangeHandler,\n      onBlur: () => {\n        setUserName(\"\");\n        setText(userName);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n_s(User, \"zS70O3i9Oz06ZbMGPpDOCOtkZPw=\");\n_c = User;\nReactDOM.render( /*#__PURE__*/_jsxDEV(User, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 38,\n  columnNumber: 5\n}, this), document.getElementById('root'));\n// Что надо написать вместо ххх,\n// чтобы после вывода текста в параграф содержимое формы ввода очищалось?\nvar _c;\n$RefreshReg$(_c, \"User\");","map":{"version":3,"names":["React","useState","ReactDOM","jsxDEV","_jsxDEV","User","_s","userName","setUserName","text","setText","onChangeHandler","e","currentTarget","value","children","onChange","onBlur","fileName","_jsxFileName","lineNumber","columnNumber","_c","render","document","getElementById","$RefreshReg$"],"sources":["D:/ITIncubator/homework-front-main/src/index.tsx"],"sourcesContent":["// import React from 'react';\n// import ReactDOM from 'react-dom/client';\n// import './index.css';\n// import App from './App';\n// import reportWebVitals from './reportWebVitals';\n\n// const root = ReactDOM.createRoot(document.getElementById('root') as HTMLElement);\n// root.render(<App />);\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n\n\nimport React, { useState, MouseEvent, ChangeEvent } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nfunction User() {\n    const [userName, setUserName] = useState<string>(\"\")\n    const [text, setText] = useState<string>(\"\")\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => setUserName(e.currentTarget.value)\n    return (\n        <div>\n            <input\n                value={userName}\n                onChange={onChangeHandler}\n                onBlur={() => {\n                    setUserName(\"\")\n                    setText(userName)\n                }}\n            />\n            <p>{text}</p>\n        </div>\n    )\n}\nReactDOM.render(\n    <User />, document.getElementById('root')\n);\n// Что надо написать вместо ххх,\n// чтобы после вывода текста в параграф содержимое формы ввода очищалось?\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,QAAiC,OAAO;AAChE,OAAOC,QAAQ,MAAM,WAAW;AAChC,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACrB,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACZ,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAS,EAAE,CAAC;EACpD,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAS,EAAE,CAAC;EAC5C,MAAMU,eAAe,GAAIC,CAAgC,IAAKJ,WAAW,CAACI,CAAC,CAACC,aAAa,CAACC,KAAK,CAAC;EAChG,oBACIV,OAAA;IAAAW,QAAA,gBACIX,OAAA;MACIU,KAAK,EAAEP,QAAS;MAChBS,QAAQ,EAAEL,eAAgB;MAC1BM,MAAM,EAAEA,CAAA,KAAM;QACVT,WAAW,CAAC,EAAE,CAAC;QACfE,OAAO,CAACH,QAAQ,CAAC;MACrB;IAAE;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eACFjB,OAAA;MAAAW,QAAA,EAAIN;IAAI;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEd;AAACf,EAAA,CAjBQD,IAAI;AAAAiB,EAAA,GAAJjB,IAAI;AAkBbH,QAAQ,CAACqB,MAAM,eACXnB,OAAA,CAACC,IAAI;EAAAa,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAE,CAAC,EAAEG,QAAQ,CAACC,cAAc,CAAC,MAAM,CAC5C,CAAC;AACD;AACA;AAAA,IAAAH,EAAA;AAAAI,YAAA,CAAAJ,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
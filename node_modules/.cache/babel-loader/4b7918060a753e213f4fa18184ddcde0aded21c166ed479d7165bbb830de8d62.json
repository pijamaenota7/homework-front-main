{"ast":null,"code":"var _jsxFileName = \"D:\\\\ITIncubator\\\\homework-front-main\\\\src\\\\s2-homeworks\\\\hw01\\\\message-sender\\\\MessageSender.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { message0 } from '../HW1';\nimport s from './MessageSender.module.css';\n\n// компонента, которая тестирует вашу компоненту (не изменять, any не трогать)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MessageSender = props => {\n  _s();\n  const M = props.M;\n  const textareaRef = useRef(null);\n  const [messages, setMessages] = useState([]);\n  const [text, setText] = useState('');\n  const onChange = e => {\n    setText(e.currentTarget.value);\n  };\n  useEffect(() => {\n    if (textareaRef !== null && textareaRef !== void 0 && textareaRef.current) {\n      textareaRef.current.style.height = '0px';\n      textareaRef.current.style.height = textareaRef.current.scrollHeight + 'px';\n    }\n  }, [text]);\n  const addMessage = () => {\n    setMessages([...messages, {\n      id: messages.length ? messages.length + 1 : 1,\n      user: message0.user,\n      message: {\n        text,\n        time: new Date().toTimeString().slice(0, 5)\n      }\n    }]);\n    setTimeout(() => setText(''), 4);\n  };\n  const onKeyDown = e => {\n    e.key === 'Enter' && e.shiftKey && addMessage();\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [messages.map(m => /*#__PURE__*/_jsxDEV(M, {\n      message: m\n    }, 'message' + m.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: 'hw1-send-message-form',\n      className: s.sendForm,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: 'hw1-textarea',\n        className: s.textarea,\n        ref: textareaRef,\n        title: 'Shift+Enter for send',\n        placeholder: 'Type your message',\n        value: text,\n        onChange: onChange,\n        onKeyDown: onKeyDown\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: 'hw1-button',\n        className: s.button,\n        onClick: addMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(MessageSender, \"B0TS2u5w+fibma7uiwXmjKnArXE=\");\n_c = MessageSender;\nexport default MessageSender;\nvar _c;\n$RefreshReg$(_c, \"MessageSender\");","map":{"version":3,"names":["React","useEffect","useRef","useState","message0","s","jsxDEV","_jsxDEV","Fragment","_Fragment","MessageSender","props","_s","M","textareaRef","messages","setMessages","text","setText","onChange","e","currentTarget","value","current","style","height","scrollHeight","addMessage","id","length","user","message","time","Date","toTimeString","slice","setTimeout","onKeyDown","key","shiftKey","children","map","m","fileName","_jsxFileName","lineNumber","columnNumber","className","sendForm","textarea","ref","title","placeholder","button","onClick","_c","$RefreshReg$"],"sources":["D:/ITIncubator/homework-front-main/src/s2-homeworks/hw01/message-sender/MessageSender.tsx"],"sourcesContent":["import React, {useEffect, useRef, useState} from 'react'\nimport { message0 } from '../HW1'\nimport s from './MessageSender.module.css'\n\n// компонента, которая тестирует вашу компоненту (не изменять, any не трогать)\nconst MessageSender = (props: any) => {\n    const M = props.M\n    const textareaRef = useRef<HTMLTextAreaElement | null>(null);\n    const [messages, setMessages] = useState<any[]>([])\n    const [text, setText] = useState<any>('')\n\n    const onChange = (e: any) => {\n        setText(e.currentTarget.value)\n    }\n\n    useEffect(() => {\n        if (textareaRef?.current) {\n            textareaRef.current.style.height = '0px'\n            textareaRef.current.style.height = textareaRef.current.scrollHeight + 'px'\n        }\n    }, [text])\n\n    const addMessage = () => {\n        setMessages([\n            ...messages,\n            {\n                id: messages.length ? messages.length + 1 : 1,\n                user: message0.user,\n                message: {\n                    text,\n                    time: new Date().toTimeString().slice(0, 5),\n                },\n            },\n        ])\n        setTimeout(() => setText(''), 4)\n    }\n\n    const onKeyDown = (e: any) => {\n        e.key === 'Enter' && e.shiftKey && addMessage()\n    }\n\n    return (\n        <>\n            {messages.map((m) => (\n                <M key={'message' + m.id} message={m} />\n            ))}\n\n            <div id={'hw1-send-message-form'} className={s.sendForm}>\n                <textarea\n                    id={'hw1-textarea'}\n                    className={s.textarea}\n                    ref={textareaRef}\n\n                    title={'Shift+Enter for send'}\n                    placeholder={'Type your message'}\n                    value={text}\n\n                    onChange={onChange}\n                    onKeyDown={onKeyDown}\n                />\n                <button\n                    id={'hw1-button'}\n                    className={s.button}\n\n                    onClick={addMessage}\n                >\n                    {/*текст кнопки могут изменить студенты*/}\n                    Send\n                    {/**/}\n                </button>\n            </div>\n        </>\n    )\n}\n\nexport default MessageSender\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}